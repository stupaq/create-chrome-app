#!/bin/sh

set -e

name="$1"
url="$2"
icon="$3"

if [[ -z "$name" || -z "$url" || ! -r "$icon" ]]; then
  echo -e "Missing or invalid arguments.\nUsage: $0 <name> <url> <icon_path>"
  exit 1
fi

# Host configuration
chromePath="/Applications/Google Chrome.app/Contents/MacOS/Google Chrome"
appRoot="$HOME/Applications"
defaultProfile="$HOME/Library/Application Support/Google/Chrome/Default"

# Various paths used when creating the app
resourcePath="$appRoot/$name.app/Contents/Resources"
execPath="$appRoot/$name.app/Contents/MacOS"
profilePath="$appRoot/$name.app/Contents/Profile"
plistPath="$appRoot/$name.app/Contents/Info.plist"
cachePath="$profilePath/Default/Cache"
preferencesPath="$profilePath/Default/Preferences"

set -x

# Make the directories
mkdir -p "$resourcePath"
mkdir -p "$execPath"
mkdir -p "$profilePath"
mkdir -p "$cachePath"

# Prevent on disk caching
touch "$cachePath/index"
chmod -R ugo-w "$cachePath"

# Override preferences
cp -f MasterPreferences "$preferencesPath"

# Convert the icon and copy into Resources
if [ -f "$icon" ] ; then
  sips -s format tiff "$icon" --out "$resourcePath/icon.tiff" --resampleWidth 128 >& /dev/null
  tiff2icns -noLarge "$resourcePath/icon.tiff" >& /dev/null
fi

# Create the executable
cat > "$execPath/$name" <<EOF
#!/bin/sh
exec "$chromePath" --app="$url" --user-data-dir="$profilePath" "\$@"
EOF
chmod +x "$execPath/$name"

# Create the Info.plist
cat > "$plistPath" <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" “http://www.apple.com/DTDs/PropertyList-1.0.dtd”>
<plist version=”1.0″>
<dict>
<key>CFBundleExecutable</key>
<string>$name</string>
<key>CFBundleIconFile</key>
<string>icon</string>
</dict>
</plist>
EOF

